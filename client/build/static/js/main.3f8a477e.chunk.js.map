{"version":3,"sources":["helpers/api.js","services/user.js","components/LoginForm/index.jsx","redux/actions.js","redux/types.js","components/Logo/index.jsx","containers/LoginPage/index.jsx","containers/ProfilePage/index.jsx","containers/SiteHeader/index.jsx","services/contact.js","components/Contact/index.jsx","services/category.js","components/Spinner/index.jsx","services/image.js","components/FileInput/index.jsx","components/AddContactForm/EmailField.jsx","components/AddContactForm/TelField.jsx","stripEmpty.util.js","components/AddContactForm/index.jsx","containers/AddContactPage/index.jsx","components/UpdateCategoryForm/index.jsx","containers/Category/index.jsx","components/AddCategoryForm/index.jsx","containers/CategoriesPage/index.jsx","containers/BirthdaysPage/index.jsx","containers/Sidebar/index.jsx","containers/Contacts/index.jsx","components/UpdateContactForm/index.jsx","containers/UpdateContactPage/index.jsx","components/ShareContact/index.jsx","containers/ExpandedContact/index.jsx","containers/MainPage/index.jsx","containers/PrivateRoute/index.jsx","components/RegisterForm/index.jsx","containers/RegisterPage/index.jsx","components/UpdateProfileForm/index.jsx","containers/UpdateProfilePage/index.jsx","scenes/NotFound/index.jsx","containers/SharedContactPage/index.jsx","config.js","components/RedirectToApi/index.jsx","containers/Routing/index.jsx","redux/store.js","redux/reducers.js","scenes/Home/index.jsx","index.jsx"],"names":["request","a","method","url","body","type","fetch","headers","then","res","json","result","login","email","password","JSON","stringify","register","settings","update","logout","exists","LoginForm","set","useState","Email","Password","emailValid","EmailValid","passwordValid","PasswordValid","loading","Loading","LogIn","valid","message","alert","user","localStorage","setItem","token","window","location","href","Form","onSubmit","Input","icon","iconPosition","placeholder","error","fluid","onChange","e","val","target","value","onBlur","validator","isEmail","Boolean","Button","color","size","primary","disabled","setProfile","profile","setExpandedContact","contact","Logo","noImage","Header","as","style","marginBottom","src","alt","Subheader","connect","dispatch","document","title","Grid","textAlign","verticalAlign","className","Column","maxWidth","Segment","Message","Content","onClick","compact","marginTop","state","columns","firstName","lastName","centered","circular","photo","padding","backgroundColor","Group","clear","reload","Modal","openOnTriggerClick","closeIcon","dimmer","trigger","positive","getContacts","contacts","getContactById","id","addContact","updateContact","data","getBirthdays","Intl","DateTimeFormat","resolvedOptions","timeZone","deleteContact","share","userEmail","console","Contact","favorite","Label","category","name","who","get","categories","add","about","deleteCategory","Spinner","Dimmer","active","inverted","Loader","React","Component","uploadImage","image","FormData","append","FileInput","buttonText","types","setLoading","startUploaded","ref","createRef","imageText","ImageText","avatarUploaded","AvatarUploaded","current","click","Icon","content","negative","display","accept","join","files","_id","rest","Valid","onChangeCode","onChangeVal","valPlaceholder","codePlaceholder","codeDef","valDef","Val","code","Code","width","startsWith","length","defaultValue","test","stripEmpty","Array","isArray","i","undefined","splice","indexOf","Object","entries","key","keys","AddContactForm","first","First","last","Last","mainTelCode","MainTelCode","mainTelVal","MainTelVal","mainEmail","MainEmail","Category","emails","Emails","tels","Tels","birthDate","BirthDate","Who","About","telegram","Telegram","viber","Viber","whatsapp","Whatsapp","facebook","Facebook","twitter","Twitter","instagram","Instagram","Favorite","Photo","categoriesOpts","map","cat","text","RegisterContact","strip","mainTelephone","telephones","messangers","Date","getFullYear","getMonth","getDate","TelField","tel","EmailField","Select","options","TextArea","Checkbox","label","checked","toggle","AddContactPage","UpdateCategoryForm","defs","Name","Update","Delete","contactsCount","Statistic","Actions","AddCategoryForm","nameValid","NameValid","Add","CategoriesPage","BirthdaysPage","requested","birthdays","this","setState","backgroundBlendMode","backgroundImage","List","Item","getContactName","birthdayStr","Sidebar","filterDefs","newFilter","addContactTrigger","interval","setInterval","scrollY","clearInterval","scrollBy","categoriesOptions","origin","querystring","Or","secondary","toTop","onContactClick","stretched","Sticky","offset","UpdateContactForm","birthDateForDelault","date","__fmt__","String","UpdateContact","labelPosition","repeat","UpdateContactPage","ShareContact","Share","expanded","Close","isNew","useRef","useEffect","getCategories","onClose","open","telephone","whiteSpace","margin","MainPage","newExpanded","query","props","search","filter","parse","slice","c","toLowerCase","includes","PrivateRoute","authorized","component","RegisterForm","FirstName","LastName","Image","Register","fields","firstNameO","lastNameO","imageO","UpdateProfileForm","errorMessage","ErrorMessage","NotFound","SharedContactPage","setContact","match","params","PROXY","process","Routing","history","createBrowserHistory","userString","getItem","userExists","exact","LoginPage","path","exaxt","RegisterPage","RedirectToApi","UpdateProfilePage","reducer","combineReducers","action","store","createStore","Home","prevFetch","opts","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.3f8a477e.chunk.js","sourcesContent":["export const request = async ({ method, url, body, type = \"application/json\" }) => {\n    const result = await fetch(url, {\n        method,\n        headers: {\n            ...(type ? { \"Content-Type\": type } : {})\n        },\n        ...(body ? { body } : {})\n    }).then(res => res.json());\n\n    return result;\n};","import { request } from \"../helpers/api\";\n\nexport const login = async ({ email, password }) => {\n    const result = await request({\n        method: \"POST\",\n        url: `/api/user/login`,\n        body: JSON.stringify({ email, password })\n    });\n\n    return result;\n};\n\nexport const register = async settings => {\n    const result = await request({\n        method: \"POST\",\n        url: `/api/user/register`,\n        body: JSON.stringify(settings)\n    });\n\n    return result;\n};\n\nexport const update = async settings => {\n    const result = await request({\n        method: \"PUT\",\n        url: `/api/user/update`,\n        body: JSON.stringify(settings)\n    });\n\n    return result;\n};\n\nexport const logout = async () => {\n    const result = await request({\n        method: \"POST\",\n        url: `/api/user/logout`\n    });\n\n    return result;\n};\n\nexport const exists = async email => {\n    const result = await request({\n        method: \"GET\",\n        url: `/api/user/exists?email=${email}`\n    });\n\n    return result;\n};\n","import React, { useState } from \"react\";\nimport { Form, Button } from \"semantic-ui-react\";\nimport validator from \"validator\";\n\nconst LoginForm = ({ login, set }) => {\n    const [email, Email] = useState(\"\");\n    const [password, Password] = useState(\"\");\n    const [emailValid, EmailValid] = useState(true);\n    const [passwordValid, PasswordValid] = useState(true);\n    const [loading, Loading] = useState(false);\n\n    const LogIn = async () => {\n        const valid = emailValid && passwordValid;\n        if (!email || !password || !valid || loading) return;\n        Loading(true);\n        const result = await login({ email, password });\n        Loading(false);\n\n        if (result.message) {\n            alert(result.message);\n        } else if (result.user) {\n            localStorage.setItem(\"user\", JSON.stringify(result.user));\n            localStorage.setItem(\"token\", result.token)\n            set(result.user);\n            window.location.href = \"/\";\n        }\n    }\n\n    const setEmail = val => {\n        Email(val);\n        EmailValid(true);\n    }\n\n    const setPassword = val => {\n        Password(val);\n        PasswordValid(true);\n    }\n\n    return (\n        <Form onSubmit={LogIn}>\n            <Form.Input\n                icon=\"at\"\n                type=\"email\"\n                iconPosition=\"left\"\n                placeholder=\"Email\"\n                error={!emailValid}\n                fluid\n                onChange={e => setEmail(e.target.value)}\n                onBlur={() => EmailValid(validator.isEmail(email))}\n            />\n            <Form.Input\n                icon=\"lock\"\n                type=\"password\"\n                iconPosition=\"left\"\n                placeholder=\"Password\"\n                error={!passwordValid}\n                fluid\n                onChange={e => setPassword(e.target.value)}\n                onBlur={() => PasswordValid(Boolean(password))}\n            />\n            <Button\n                color=\"teal\"\n                size=\"large\"\n                fluid\n                primary\n                type=\"submit\"\n                loading={loading}\n                disabled={!Boolean(email && password)}\n            >\n                Log in\n            </Button>\n        </Form>\n    );\n};\n\nexport default LoginForm;\n","import { SET_PROFILE, SET_EXP_CONTACT } from \"./types\";\n\nexport const setProfile = profile => ({\n    type: SET_PROFILE,\n    profile\n});\n\nexport const setExpandedContact = contact => ({\n    type: SET_EXP_CONTACT,\n    contact\n});\n","export const SET_PROFILE = \"PROFILE:SET\";\nexport const SET_EXP_CONTACT = \"EXP_CONTACT:SET\";\n","import React from \"react\";\nimport { Header, Image } from \"semantic-ui-react\";\n\nconst Logo = ({ noImage = false }) => {\n    return (\n        <Header as=\"h2\" color=\"teal\" size=\"huge\" style={{ marginBottom: 50 }} >\n            {!noImage ? <Image src=\"http://s1.iconbird.com/ico/2013/7/390/w256h2561372777054AddressBook.png\" alt=\"book\" /> : \"\"}\n            <br />\n            Contact Book\n            <Header.Subheader>\n                A notebook for your contacts\n            </Header.Subheader>\n        </Header>\n    );\n};\n\nexport default Logo;\n","import React from \"react\";\nimport { Grid, Segment, Header, Message, Button } from \"semantic-ui-react\";\nimport { login } from \"../../services/user\";\nimport LoginForm from \"../../components/LoginForm\";\nimport { connect } from \"react-redux\";\nimport { setProfile } from \"../../redux/actions\";\nimport Logo from \"../../components/Logo\";\n\nconst LoginPage = ({ setProfile }) => {\n    document.title = \"Contact Book | Log in\";\n\n    return (\n        <Grid textAlign=\"center\" verticalAlign=\"middle\" className=\"fill\">\n            <Grid.Column style={{ maxWidth: 450 }}>\n                <Logo />\n                <Header as=\"h2\" color=\"olive\">Log in to your account</Header>\n                <Segment>\n                    <LoginForm login={login} set={setProfile} />\n                </Segment>\n                <Message>\n                    <Message.Header>New to us?</Message.Header>\n                    <Message.Content>\n                        <Button\n                            onClick={() => window.location.href = \"/register\"}\n                            compact\n                            size=\"mini\"\n                            color=\"teal\"\n                            style={{ marginTop: 10 }}\n                        >\n                            Sign up\n                        </Button>\n                    </Message.Content>\n                </Message>\n            </Grid.Column>\n        </Grid>\n    );\n};\n\nconst mapStateToProps = () => ({});\n\nconst mapDispatchToProps = dispatch => ({\n    setProfile: user => dispatch(setProfile(user))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Image, Header, Segment, Grid } from \"semantic-ui-react\";\n\nconst ProfilePage = ({ user }) => {\n    return (\n        <Segment>\n            <Header textAlign=\"center\" size=\"huge\">Your Contact Book profile info</Header>\n            <Grid columns=\"2\" textAlign=\"center\" verticalAlign=\"middle\">\n                <Grid.Column>\n                    {user.firstName ? <p>First name: {user.firstName}</p> : \"\"}\n                    {user.lastName ? <p>Last name: {user.lastName}</p> : \"\"}\n                </Grid.Column>\n                <Grid.Column>\n                    <p>Email: {user.email}</p>\n                </Grid.Column>\n            </Grid>\n            <Image centered circular src={user.photo.url} alt=\"Profile photo\" />\n        </Segment>\n    );\n};\n\nconst mapStateToProps = state => ({\n    user: state.profile.profile\n});\n\nexport default connect(mapStateToProps)(ProfilePage);\n","import React from \"react\";\nimport { Header, Image, Grid, Button, Modal } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../services/user\";\nimport ProfilePage from \"../ProfilePage\";\n\nconst SiteHeader = ({ user }) => {\n    const getUserText = () => {\n        if (user.firstName && (user.lastName || true)) {\n            return user.firstName + \" \" + (user.lastName || \"\");\n        } else {\n            return user.email;\n        }\n    };\n\n    const LogOut = () => {\n        logout().then(() => {\n            localStorage.clear();\n            window.location.reload();\n        });\n    };\n\n    return (\n        <Grid centered columns=\"2\" style={{ padding: \"1em 0\", backgroundColor: \"white\" }} verticalAlign=\"middle\">\n            <Grid.Column textAlign=\"center\" verticalAlign=\"middle\">\n                <Header>\n                    <Image src={user.photo.url} circular size=\"massive\" alt=\"Profile avatar\" />\n                    {\" \"}\n                    {getUserText()}\n                </Header>\n            </Grid.Column>\n            <Grid.Column textAlign=\"center\" verticalAlign=\"middle\">\n                <Button.Group>\n                    <Button\n                        icon=\"sign out alternate\"\n                        color=\"red\"\n                        size=\"large\"\n                        onClick={LogOut}\n                    />\n                    <Button\n                        icon=\"refresh\"\n                        color=\"yellow\"\n                        size=\"large\"\n                        onClick={() => window.location.href = \"/update\"}\n                    />\n                    <Modal openOnTriggerClick closeIcon dimmer=\"blurring\" trigger={\n                        <Button\n                            icon=\"info\"\n                            positive\n                            size=\"large\"\n                        />\n                    }>\n                        <Modal.Header>Profile</Modal.Header>\n                        <Modal.Content>\n                            <ProfilePage />\n                        </Modal.Content>\n                    </Modal>\n                </Button.Group>\n            </Grid.Column>\n        </Grid>\n    );\n};\n\nconst mapStateToProps = state => ({\n    user: state.profile.profile\n});\n\nexport default connect(mapStateToProps)(SiteHeader);\n","import { request } from \"../helpers/api\";\n\nexport const getContacts = async () => {\n    const result = await request({\n        url: \"/api/contact\",\n        method: \"GET\"\n    });\n\n    return result.contacts;\n};\n\nexport const getContactById = async id => {\n    const result = await request({\n        url: `/api/contact/${id}`,\n        method: \"GET\"\n    });\n\n    return result.contact;\n};\n\nexport const addContact = async settings => {\n    const result = await request({\n        url: \"/api/contact/register\",\n        method: \"POST\",\n        body: JSON.stringify(settings)\n    });\n\n    return result.contact;\n};\n\nexport const updateContact = async (id, settings) => {\n    const result = await request({\n        url: \"/api/contact/update\",\n        method: \"PUT\",\n        body: JSON.stringify({ id, data: settings })\n    });\n\n    return result.contact;\n};\n\nexport const getBirthdays = async () => {\n    const result = await request({\n        url: \"/api/contact/birthdays?tz=\" + Intl.DateTimeFormat().resolvedOptions().timeZone,\n        method: \"GET\"\n    });\n\n    return result.contacts;\n};\n\nexport const deleteContact = async id => {\n    const result = await request({\n        url: \"/api/contact/delete\",\n        method: \"DELETE\",\n        body: JSON.stringify({ id })\n    });\n\n    return result.contact;\n};\n\nexport const share = async (id, email) => {\n    const result = await request({\n        url: \"/api/contact/share\",\n        method: \"POST\",\n        body: JSON.stringify({ id, userEmail: email })\n    });\n\n    if (result.message) {\n        console.error(result.message);\n    }\n};\n","import React from \"react\";\nimport { Segment, Grid, Image, Label, Header } from \"semantic-ui-react\";\n\nconst Contact = ({ contact, onClick }) => {\n    return (\n        <Segment onClick={onClick(contact)} style={{ backgroundColor: contact.favorite ? \"yellow\" : \"while\" }}>\n            <Grid textAlign=\"center\" verticalAlign=\"middle\" columns=\"3\">\n                <Grid.Column>\n                    <Grid columns=\"2\" verticalAlign=\"middle\">\n                        <Grid.Column>\n                            <Image src={contact.photo.url} alt=\"Contact photo\" circular size=\"tiny\" />\n                        </Grid.Column>\n                        <Grid.Column>\n                            <Header>\n                                {\n                                    (contact.firstName || \"\") +\n                                    \" \" +\n                                    (contact.lastName || \"\")\n                                }\n                            </Header>\n                        </Grid.Column>\n                    </Grid>\n                </Grid.Column>\n                <Grid.Column>\n                    <Label color=\"green\">{contact.category.name}</Label>\n                    {contact.who ? <Label color=\"red\">{contact.who}</Label> : \"\"}\n                </Grid.Column>\n            </Grid>\n        </Segment>\n    );\n};\n\nexport default Contact;\n","import { request } from \"../helpers/api\";\n\nexport const get = async () => {\n    const result = await request({\n        url: \"/api/category\",\n        method: \"GET\"\n    });\n\n    return result.categories;\n};\n\nexport const add = async ({ name, about }) => {\n    const result = await request({\n        url: \"/api/category/register\",\n        method: \"POST\",\n        body: JSON.stringify({ name, about })\n    });\n\n    return result.category;\n};\n\nexport const update = async (id, { name, about }) => {\n    const result = await request({\n        url: \"/api/category/update\",\n        method: \"PUT\",\n        body: JSON.stringify({ id, data: { name, about } })\n    });\n\n    return result.category;\n};\n\nexport const deleteCategory = async id => {\n    const result = await request({\n        url: \"/api/category/delete\",\n        method: \"DELETE\",\n        body: JSON.stringify({ id })\n    });\n\n    return result.category;\n};\n","import React from \"react\";\nimport { Dimmer, Loader } from \"semantic-ui-react\";\n\nclass Spinner extends React.Component {\n    render() {\n        return (\n            <Dimmer active inverted>\n                <Loader size=\"massive\" inverted />\n            </Dimmer>\n        );\n    }\n}\n\nexport default Spinner;\n","import { request } from \"../helpers/api\";\n\nexport const uploadImage = async image => {\n    const data = new FormData();\n    data.append(\"image\", image);\n\n    const result = await request({\n        url: `/api/image/register`,\n        method: \"POST\",\n        type: null,\n        body: data\n    });\n\n    return result.image;\n};\n","import React, { createRef, useState } from \"react\";\nimport { Button, Icon, Label } from \"semantic-ui-react\";\nimport { uploadImage } from \"../../services/image\";\n\nconst FileInput = ({\n    buttonText = \"Choose photo\",\n    types = [\".png\", \".bmp\", \".jpg\", \".jpeg\"],\n    onChange,\n    setLoading,\n    startUploaded = false\n}) => {\n    const ref = createRef();\n    const [imageText, ImageText] = useState(\"No image\");\n    const [avatarUploaded, AvatarUploaded] = useState(startUploaded);\n\n    const upload = e => {\n        if (e.target.files[0]) {\n            setLoading(true);\n\n            uploadImage(e.target.files[0]).then(({ _id }) => {\n                onChange(_id);\n                ImageText(\"Your image is uploaded!\");\n                setLoading(false);\n                AvatarUploaded(true);\n            });\n        } else {\n            onChange(null);\n            ImageText(\"No image\");\n            AvatarUploaded(false);\n        }\n    };\n\n    return (\n        <>\n            <Label color={avatarUploaded ? \"green\" : \"grey\"} style={{ marginBottom: 10 }}>{imageText}</Label>\n            <Button.Group fluid>\n                <Button\n                    color=\"teal\"\n                    size=\"large\"\n                    onClick={() => ref.current.click()}\n                    style={{ marginBottom: 10 }}\n                    type=\"button\"\n                >\n                    <Icon name=\"image\" />\n                    {buttonText}\n                </Button>\n                <Button\n                    content=\"Delete image\"\n                    negative\n                    onClick={() => {\n                        onChange(null);\n                        ImageText(\"No image\");\n                        AvatarUploaded(false);\n                    }}\n                    style={{ marginBottom: 10 }}\n                    type=\"button\"\n                    disabled={!avatarUploaded}\n                />\n            </Button.Group>\n            <input\n                type=\"file\"\n                style={{ display: \"none\" }}\n                ref={ref}\n                accept={types.join(\", \")}\n                onChange={upload}\n            />\n        </>\n    );\n};\n\nexport default FileInput;\n","import React, { useState } from \"react\";\nimport validator from \"validator\";\nimport { Form } from \"semantic-ui-react\"\n\nexport default ({ onChange, ...rest }) => {\n    const [valid, Valid] = useState(true);\n\n    return (\n        <Form.Input \n            type=\"email\"\n            icon=\"at\"\n            iconPosition=\"left\"\n            fluid\n            error={!valid}\n            onChange={e => {\n                onChange(e);\n                Valid(validator.isEmail(e.target.value))\n            }}\n            {...rest}\n        />\n    );\n};\n","import React, { useState } from \"react\";\nimport { Form } from \"semantic-ui-react\"\n\nexport default ({ onChangeCode, onChangeVal, valPlaceholder, codePlaceholder, codeDef = \"\", valDef = \"\" }) => {\n    const [val, Val] = useState(\"\");\n    const [code, Code] = useState(\"\");\n\n    return (\n        <Form.Group>\n            <Form.Input\n                width={7}\n                error={code ? !(code.startsWith(\"+\") && code.length >= 2 && code.length <= 4) : false}\n                onChange={e => {\n                    onChangeCode(e);\n                    Code(e.target.value);\n                }}\n                placeholder={codePlaceholder}\n                defaultValue={codeDef}\n            />\n            <Form.Input\n                width={7}\n                error={val ? !(/^[0-9]{9}$/.test(val)) : false}\n                onChange={e => {\n                    onChangeVal(e);\n                    Val(e.target.value);\n                }}\n                placeholder={valPlaceholder}\n                defaultValue={valDef}\n            />\n        </Form.Group>\n    );\n};\n","export default function stripEmpty(value) {\n    if (Array.isArray(value)) {\n        for (let i = 0; i < value.length; i++) {\n            const val = value[i];\n\n            if (val === \"\" || val === null || val === undefined) {\n                value.splice(value.indexOf(val), 1);\n                i--;\n            } else if (Array.isArray(val) || typeof val === \"object\") {\n                const canDelete = stripEmpty(val);\n\n                if (canDelete[0]) {\n                    if (Array.isArray(value)) {\n                        value.splice(value.indexOf(val), 1);\n                    } else {\n                        delete value[i];\n                    }\n                }\n            }\n        }\n    } else if (typeof value === \"object\" && value !== null) {\n        for (const [key, val] of Object.entries(value)) {\n            if (val === \"\" || val === null || val === undefined) {\n                delete value[key];\n            } else if (Array.isArray(val) || typeof val === \"object\") {\n                const canDelete = stripEmpty(val);\n\n                if (canDelete[0]) {\n                    if (Array.isArray(value)) {\n                        value.splice(value.indexOf(val), 1);\n                    } else {\n                        delete value[key];\n                    }\n                }\n            }\n        }\n    }\n\n    return [value.length ? value.length === 0 : Object.keys(value).length === 0, value];\n}\n","import React, { useState } from \"react\";\nimport { Form, Button } from \"semantic-ui-react\";\nimport FileInput from \"../FileInput\";\nimport EmailField from \"./EmailField\";\nimport TelField from \"./TelField\";\nimport strip from \"../../stripEmpty.util\";\nimport { addContact } from \"../../services/contact\";\n\nconst AddContactForm = ({ categories }) => {\n    const [first, First] = useState(\"\");\n    const [last, Last] = useState(\"\");\n    const [mainTelCode, MainTelCode] = useState(\"\");\n    const [mainTelVal, MainTelVal] = useState(\"\")\n    const [mainEmail, MainEmail] = useState(\"\");\n    const [category, Category] = useState(categories[0]._id);\n    const [emails, Emails] = useState([]);\n    const [tels, Tels] = useState([]);\n    const [birthDate, BirthDate] = useState(\"\");\n    const [who, Who] = useState(\"\");\n    const [about, About] = useState(\"\");\n    const [telegram, Telegram] = useState(\"\");\n    const [viber, Viber] = useState(\"\");\n    const [whatsapp, Whatsapp] = useState(\"\");\n    const [facebook, Facebook] = useState(\"\");\n    const [twitter, Twitter] = useState(\"\");\n    const [instagram, Instagram] = useState(\"\");\n    const [favorite, Favorite] = useState(false);\n    const [photo, Photo] = useState(\"\");\n    const [loading, Loading] = useState(false);\n\n    const categoriesOpts = categories.map(cat => ({ key: cat._id, value: cat._id, text: cat.name }));\n\n    const RegisterContact = async () => {\n        Loading(true);\n\n        const settings = strip({\n            firstName: first,\n            lastName: last,\n            mainTelephone: {\n                code: mainTelCode,\n                value: mainTelVal\n            },\n            mainEmail,\n            category,\n            emails,\n            telephones: tels,\n            who,\n            about,\n            messangers: {\n                telegram,\n                viber,\n                whatsapp,\n                instagram,\n                twitter,\n                facebook\n            },\n            favorite,\n            photo\n        })[1];\n\n        if (birthDate) {\n            settings.birthDate = new Date(\n                (new Date(birthDate)).getFullYear(),\n                (new Date(birthDate)).getMonth(),\n                (new Date(birthDate)).getDate()\n            );\n        }\n\n        await addContact(settings);\n\n        Loading(false);\n        window.location.reload();\n    };\n\n    return (\n        <Form onSubmit={RegisterContact}>\n            <Form.Group>\n                <Form.Input\n                    width={7}\n                    fluid\n                    icon=\"users\"\n                    iconPosition=\"left\"\n                    onChange={e => First(e.target.value)}\n                    placeholder=\"First name\"\n                />\n                <Form.Input\n                    width={7}\n                    fluid\n                    icon=\"users\"\n                    iconPosition=\"left\"\n                    onChange={e => Last(e.target.value)}\n                    placeholder=\"Last name\"\n                />\n            </Form.Group>\n            <TelField\n                onChangeCode={e => MainTelCode(e.target.value)}\n                codePlaceholder=\"Main telephone code\"\n                onChangeVal={e => MainTelVal(e.target.value)}\n                valPlaceholder=\"Main telephone value\"\n            />\n            {tels.map((tel, i) => (\n                <TelField\n                    key={i}\n                    onChangeCode={e => tels[i].code = e.target.value}\n                    onChangeVal={e => tels[i].value = e.target.value}\n                    codePlaceholder={\"Tel #\" + (i + 2) + \" code\"}\n                    valPlaceholder={\"Tel #\" + (i + 2) + \" value\"}\n                    valDef={tel.value}\n                    codeDef={tel.code}\n                />\n            ))}\n            <Button\n                fluid\n                positive\n                disabled={tels.length > 9}\n                onClick={() => tels.length <= 10 ? Tels([...tels, { code: \"\", value: \"\" }]) : null}\n                style={{ marginBottom: 10 }}\n                type=\"button\"\n            >\n                + Add telephone\n            </Button>\n            <EmailField\n                onChange={e => MainEmail(e.target.value)}\n                placeholder=\"Main email\"\n            />\n            {emails.map((email, i) => (\n                <EmailField\n                    key={i}\n                    onChange={e => emails[i] = e.target.value}\n                    placeholder={\"Email #\" + (i + 2)}\n                    defaultValue={email}\n                />\n            ))}\n            <Button\n                fluid\n                positive\n                disabled={emails.length > 9}\n                onClick={() => emails.length <= 10 ? Emails([...emails, \"\"]) : null}\n                style={{ marginBottom: 10 }}\n                type=\"button\"\n            >\n                + Add email\n            </Button>\n            <Form.Select options={categoriesOpts} onChange={(e, data) => Category(data.value)} defaultValue={category} />\n            <Form.Input\n                fluid\n                onChange={e => Who(e.target.value)}\n                placeholder=\"Who\"\n            />\n            <Form.TextArea\n                onChange={e => About(e.target.value)}\n                placeholder=\"About\"\n            />\n            <Form.Group style={{ width: \"100%\" }}>\n                <Form.Input\n                    width={5}\n                    fluid\n                    placeholder=\"Telegram\"\n                    onChange={e => Telegram(e.target.value)}\n                />\n                <Form.Input\n                    width={5}\n                    fluid\n                    placeholder=\"Viber\"\n                    onChange={e => Viber(e.target.value)}\n                />\n                <Form.Input\n                    width={5}\n                    fluid\n                    placeholder=\"Whatsapp\"\n                    onChange={e => Whatsapp(e.target.value)}\n                />\n            </Form.Group>\n            <Form.Group>\n                <Form.Input\n                    width={5}\n                    fluid\n                    placeholder=\"Facebook\"\n                    onChange={e => Facebook(e.target.value)}\n                />\n                <Form.Input\n                    width={5}\n                    fluid\n                    placeholder=\"Twitter\"\n                    onChange={e => Twitter(e.target.value)}\n                />\n                <Form.Input\n                    width={5}\n                    fluid\n                    placeholder=\"Instagram\"\n                    onChange={e => Instagram(e.target.value)}\n                />\n            </Form.Group>\n            <Form.Input\n                fluid\n                type=\"date\"\n                placeholder=\"Birth date\"\n                onChange={(e, data) => BirthDate(data.value)}\n            />\n            <Form.Checkbox \n                label=\"Favorite\"\n                onChange={(e, data) => Favorite(data.checked)}\n                toggle\n            />\n            <FileInput buttonText=\"Choose contact photo\" onChange={val => Photo(val)} setLoading={Loading} />\n            <Button\n                fluid\n                primary\n                type=\"submit\"\n                size=\"large\"\n                loading={loading}\n                disabled={!(mainTelCode && mainTelVal)}\n            >\n                Add contact\n            </Button>\n        </Form>\n    );\n};\n\nexport default AddContactForm;\n","import React from \"react\";\nimport Logo from \"../../components/Logo\";\nimport { Header, Grid, Segment } from \"semantic-ui-react\";\nimport AddContactForm from \"../../components/AddContactForm\";\n\nconst AddContactPage = ({ categories }) => {\n    return (\n        <Grid textAlign=\"center\" verticalAlign=\"middle\">\n            <Grid.Column style={{ maxWidth: 500 }}>\n                <Logo noImage />\n                <Header color=\"olive\" size=\"large\">Add contact to your book</Header>\n                <Segment>\n                    <AddContactForm categories={categories} />\n                </Segment>\n            </Grid.Column>\n        </Grid>\n    );\n};\n\nexport default AddContactPage;\n","import React, { useState } from \"react\";\nimport { Form, Button } from \"semantic-ui-react\";\nimport { update } from \"../../services/category\";\n\nconst UpdateCategoryForm = ({ defs, id }) => {\n    const [name, Name] = useState(defs.name || \"\");\n    const [about, About] = useState(defs.about || \"\");\n    const [loading, Loading] = useState(false);\n\n    const Update = async () => {\n        if (!name || loading) return;\n        Loading(true);\n        await update(id, { name, about });\n        Loading(false);\n        window.location.reload();\n    }\n\n    return (\n        <Form onSubmit={Update}>\n            <Form.Input\n                fluid\n                icon=\"id card outline\"\n                iconPosition=\"left\"\n                placeholder=\"Name\"\n                onChange={e => Name(e.target.value)}\n                defaultValue={name}\n            />\n            <Form.TextArea\n                fluid=\"true\"\n                placeholder=\"About\"\n                onChange={e => About(e.target.value)}\n                defaultValue={about}\n            />\n            <Button\n                fluid\n                primary\n                type=\"submit\"\n                loading={loading}\n                disabled={!name}\n            >\n                Update category\n            </Button>\n        </Form>\n    );\n};\n\nexport default UpdateCategoryForm;\n","import React from \"react\";\nimport { Segment, Grid, Header, Statistic, Button, Modal } from \"semantic-ui-react\";\nimport UpdateCategoryForm from \"../../components/UpdateCategoryForm\";\nimport { connect } from \"react-redux\"\nimport { deleteCategory } from \"../../services/category\";\n\nconst Category = ({ category, user }) => {\n    const Delete = async () => {\n        if (category.contactsCount !== 0) {\n            return alert(\n                \"Change category from \" +\n                category.name +\n                \" to another in \" +\n                category.contactsCount +\n                \" contact\" +\n                (category.contactsCount !== 1 ? \"s\" : \"\") +\n                \" and then try again. Good luck!\\nPRO TIP: use filter\"\n            );\n        }\n\n        await deleteCategory(category._id);\n        window.location.reload();\n    };\n\n    return (\n        <Segment>\n            <Grid columns=\"4\" textAlign=\"center\" verticalAlign=\"middle\">\n                <Grid.Column>\n                    <Header>{category.name}</Header>\n                </Grid.Column>\n                <Grid.Column>\n                    <Statistic\n                        size=\"tiny\"\n                        value={category.contactsCount}\n                        label={\"contact\" + (category.contactsCount !== 1 ? \"s\" : \"\")}\n                    />\n                </Grid.Column>\n                <Grid.Column>\n                    {category.about}\n                </Grid.Column>\n                {user._id === category.user ? (\n                    <Grid.Column>\n                        <Button.Group>\n                            <Modal openOnTriggerClick closeIcon trigger={<Button icon=\"refresh\" color=\"yellow\" />}>\n                                <Modal.Header>Update {category.name} category</Modal.Header>\n                                <Modal.Content>\n                                    <UpdateCategoryForm defs={category} id={category._id} />\n                                </Modal.Content>\n                            </Modal>\n                            <Modal openOnTriggerClick closeIcon trigger={<Button icon=\"trash\" negative />}>\n                                <Modal.Header>Are you sure?</Modal.Header>\n                                <Modal.Content>\n                                    Are you sure about deleting {category.name} category?\n                                </Modal.Content>\n                                <Modal.Actions>\n                                    <Button negative onClick={Delete}>Yes</Button>\n                                </Modal.Actions>\n                            </Modal>\n                        </Button.Group>\n                    </Grid.Column>\n                ) : \"\"}\n            </Grid>\n        </Segment>\n    );\n};\n\nconst mapStateToProps = state => ({\n    user: state.profile.profile\n});\n\nexport default connect(mapStateToProps)(Category);\n","import React, { useState } from \"react\";\nimport { Form, Button } from \"semantic-ui-react\";\nimport { add } from \"../../services/category\";\nimport strip from \"../../stripEmpty.util\";\n\nconst AddCategoryForm = () => {\n    const [name, Name] = useState(\"\");\n    const [nameValid, NameValid] = useState(true);\n    const [about, About] = useState(\"\");\n    const [loading, Loading] = useState(false);\n\n    const setName = val => {\n        NameValid(true);\n        Name(val);\n    };\n\n    const Add = async () => {\n        if (!name || !nameValid || loading) return;\n        Loading(true);\n        await add(strip({ name, about })[1]);\n        Loading(false);\n        window.location.reload();\n    }\n\n    return (\n        <Form onSubmit={Add}>\n            <Form.Input\n                fluid\n                icon=\"id card outline\"\n                iconPosition=\"left\"\n                placeholder=\"Name\"\n                onChange={e => setName(e.target.value)}\n                onBlur={() => NameValid(Boolean(name))}\n                error={!nameValid}\n            />\n            <Form.TextArea\n                fluid=\"true\"\n                placeholder=\"About\"\n                onChange={e => About(e.target.value)}\n            />\n            <Button\n                fluid\n                primary\n                type=\"submit\"\n                loading={loading}\n            >\n                Add category\n            </Button>\n        </Form>\n    );\n};\n\nexport default AddCategoryForm;\n","import React from \"react\";\nimport Category from \"../Category\";\nimport AddCategoryForm from \"../../components/AddCategoryForm\";\n\nconst CategoriesPage = ({ categories }) => {\n    return (\n        <>\n            {categories.map(cat => <Category category={cat} key={cat._id} />)}\n            <AddCategoryForm />\n        </>\n    );\n};\n\nexport default CategoriesPage;\n","import React from \"react\";\nimport { Segment, List, Header } from \"semantic-ui-react\";\nimport { getBirthdays } from \"../../services/contact\";\n\nclass BirthdaysPage extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            requested: false,\n            birthdays: []\n        };\n    }\n\n    componentDidMount() {\n        if (!this.state.requested) {\n            getBirthdays().then(birthdays => this.setState({ requested: true, birthdays }));\n        }\n    }\n\n    render() {\n        if (this.state.requested) {\n            const getContactName = contact => {\n                if (contact.firstName || contact.lastName) {\n                    return (contact.firstName || \"\") + \" \" + (contact.lastName || \"\");\n                } else {\n                    return contact.mainTelephone.code + contact.mainTelephone.value;\n                }\n            };\n\n            return (\n                <Segment textAlign=\"center\" style={{\n                    backgroundBlendMode: \"overlay\",\n                    backgroundImage: \"url('https://i.pinimg.com/474x/7a/bb/e0/7abbe0f43c47ba3340053bd825251995--neon-lights-party-glow-party.jpg')\",backgroundColor: \"#000B\"\n                }}>\n                    <Header size=\"large\" color=\"olive\">Coming birthdays</Header>\n                    <List>\n                        {this.state.birthdays.length > 0 ? this.state.birthdays.map(contact => (\n                            <List.Item key={contact._id}>\n                                <Header size=\"small\" color=\"green\">\n                                    {getContactName(contact)}\n                                    <Header.Subheader style={{ color: \"yellow\" }}>{contact.birthdayStr}</Header.Subheader>\n                                </Header>\n                            </List.Item>\n                        )) : <Header size=\"medium\" style={{ color: \"white\" }}>No birthdays</Header>}\n                    </List>\n                </Segment>\n            );\n        } else {\n            return \"\";\n        }\n    }\n}\n\nexport default BirthdaysPage;\n","import React, { createRef } from \"react\";\nimport { Form, Segment, Select, Button, Modal, Grid } from \"semantic-ui-react\";\nimport { get } from \"../../services/category\";\nimport Spinner from \"../../components/Spinner\";\nimport querystring from \"querystring\";\nimport AddContactPage from \"../AddContactPage\";\nimport CategoriesPage from \"../CategoriesPage\";\nimport BirthdaysPage from \"../BirthdaysPage\";\n\nclass Sidebar extends React.Component {\n    constructor({ filterDefs }) {\n        super();\n        this.state = { requested: false, categories: null };\n        this.newFilter = filterDefs || {};\n        this.addContactTrigger = createRef();\n    }\n\n    componentDidMount() {\n        if (!this.state.requested) {\n            get().then(categories => this.setState({ requested: true, categories }));\n        }\n    }\n\n    toTop() {\n        const interval = setInterval(() => {\n            if (window.scrollY <= 10) {\n                clearInterval(interval);\n            }\n\n            window.scrollBy(0, -20);\n        }, 10);\n    }\n\n    render() {\n        if (!this.state.requested) return <Spinner />\n\n        const { categories } = this.state;\n\n        const categoriesOptions = [\n            { key: \"\", value: \"\", text: \"-\" },\n            ...categories.map(category => ({\n                key: category.name,\n                value: category.name,\n                text: category.name\n            }))\n        ];\n\n        return (\n            <Grid columns=\"2\">\n                <Grid.Column>\n                    <Segment style={{ maxWidth: 300, backgroundColor: \"black\" }}>\n                        <Form onSubmit={() => \n                                window.location.href = window.location.origin +\n                                \"?\" +\n                                querystring.stringify(this.newFilter)}>\n                            <Form.Input\n                                fluid\n                                icon=\"users\"\n                                iconPosition=\"left\"\n                                placeholder=\"First name\"\n                                onChange={e => this.newFilter.firstName = e.target.value}\n                                defaultValue={this.newFilter.firstName || \"\"}\n                            />\n                            <Form.Input\n                                fluid\n                                icon=\"users\"\n                                iconPosition=\"left\"\n                                placeholder=\"Last name\"\n                                onChange={e => this.newFilter.lastName = e.target.value}\n                                defaultValue={this.newFilter.lastName || \"\"}\n                            />\n                            <Form.Input\n                                fluid\n                                icon=\"at\"\n                                iconPosition=\"left\"\n                                placeholder=\"Email\"\n                                onChange={e => this.newFilter.mainEmail = e.target.value}\n                                defaultValue={this.newFilter.mainEmail || \"\"}\n                            />\n                            <Select\n                                fluid\n                                placeholder=\"Select category\"\n                                options={categoriesOptions}\n                                onChange={(e, data) => this.newFilter.category = data.value}\n                                style={{ marginBottom: 10 }}\n                                defaultValue={this.newFilter.category || null}\n                            />\n                            <Button.Group fluid size=\"large\">\n                                <Button\n                                    primary\n                                    type=\"submit\"\n                                >\n                                    Filter contacts\n                                </Button>\n                                <Button.Or />\n                                <Button\n                                    secondary\n                                    inverted\n                                    onClick={() => {\n                                        this.newFilter = {};\n                                        window.location.href = \"/\";\n                                    }}\n                                >\n                                    Reset filter\n                                </Button>\n                            </Button.Group>\n                        </Form>\n                    </Segment>\n                    <Button.Group>\n                        <Button\n                            icon=\"angle up\"\n                            positive\n                            onClick={this.toTop}\n                        />\n                        <Button.Or />\n                        <Modal openOnTriggerClick closeIcon trigger={<Button primary>Add contact</Button>}>\n                            <Modal.Header>\n                                Add contact\n                            </Modal.Header>\n                            <Modal.Content>\n                                <AddContactPage categories={categories} />\n                            </Modal.Content>\n                        </Modal>\n                        <Button.Or />\n                        <Modal openOnTriggerClick closeIcon trigger={<Button secondary>View categories</Button>}>\n                            <Modal.Header>\n                                All categories\n                            </Modal.Header>\n                            <Modal.Content>\n                                <CategoriesPage categories={categories} />\n                            </Modal.Content>\n                        </Modal>\n                    </Button.Group>\n                </Grid.Column>\n                <Grid.Column>\n                    <BirthdaysPage />\n                </Grid.Column>\n            </Grid>\n        );\n    }\n}\n\nexport default Sidebar;\n","import React from \"react\";\nimport { Grid, Sticky, Segment, Header } from \"semantic-ui-react\";\nimport Contact from \"../../components/Contact\";\nimport { setExpandedContact } from \"../../redux/actions\";\nimport { connect } from \"react-redux\";\nimport Sidebar from \"../Sidebar\";\n\nconst Contacts = ({ contacts, onContactClick, filterDefs }) => {\n    return (\n        <Grid columns=\"2\">\n            <Grid.Column>\n                {contacts.length > 0\n                    ? <>{contacts.map(contact => <Contact key={contact._id} contact={contact} onClick={onContactClick}/>)}</>\n                    : (\n                        <Segment>\n                            <Header size=\"huge\" textAlign=\"center\">Oops! No contacts found!</Header>\n                        </Segment>\n                    )}\n            </Grid.Column>\n            <Grid.Column stretched>\n                <Sticky offset={50}>\n                    <Sidebar filterDefs={filterDefs} />\n                </Sticky>\n            </Grid.Column>\n        </Grid>\n    );\n};\n\nconst mapStateToProps = () => ({});\n\nconst mapDispatchToProps = dispatch => ({\n    onContactClick: contact => () => dispatch(setExpandedContact(contact))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\n","import React, { useState } from \"react\";\nimport { Form, Button } from \"semantic-ui-react\";\nimport FileInput from \"../FileInput\";\nimport EmailField from \"../AddContactForm/EmailField\";\nimport TelField from \"../AddContactForm/TelField\";\nimport { updateContact } from \"../../services/contact\";\n\nconst UpdateContactForm = ({ categories, id, defs }) => {\n    defs.birthDate && (defs.birthDate = new Date(defs.birthDate));\n    const [first, First] = useState(defs.firstName || \"\");\n    const [last, Last] = useState(defs.lastName || \"\");\n    const [mainTelCode, MainTelCode] = useState(defs.mainTelephone ? (defs.mainTelephone.code || \"\") : \"\");\n    const [mainTelVal, MainTelVal] = useState(defs.mainTelephone ? (defs.mainTelephone.value || \"\") : \"\");\n    const [mainEmail, MainEmail] = useState(defs.mainEmail || \"\");\n    const [category, Category] = useState(defs.category._id || categories[0]._id);\n    const [emails, Emails] = useState(defs.emails || []);\n    const [tels, Tels] = useState(defs.telephones ? (defs.telephones.map(tel => ({ code: tel.code, value: tel.value }))) : []);\n    const __fmt__ = date => date >= 10 ? date : \"0\" + String(date);\n    const __fmt_Y__ = date => date >= 999 ? date : \"0\".repeat(4 - date.length) + String(date);\n    const [birthDate, BirthDate] = useState(defs.birthDate || \"\");\n    const [who, Who] = useState(defs.who || \"\");\n    const [about, About] = useState(defs.about || \"\");\n    const [telegram, Telegram] = useState(defs.messangers ? (defs.messangers.telegram || \"\") : \"\");\n    const [viber, Viber] = useState(defs.messangers ? (defs.messangers.viber || \"\") : \"\");\n    const [whatsapp, Whatsapp] = useState(defs.messangers ? (defs.messangers.whatsapp || \"\") : \"\");\n    const [facebook, Facebook] = useState(defs.messangers ? (defs.messangers.facebook || \"\") : \"\");\n    const [twitter, Twitter] = useState(defs.messangers ? (defs.messangers.twitter || \"\") : \"\");\n    const [instagram, Instagram] = useState(defs.messangers ? (defs.messangers.instagram || \"\") : \"\");\n    const [favorite, Favorite] = useState(defs.favorite || false);\n    const [photo, Photo] = useState(defs.photo ? (defs.photo._id || \"\") : \"\");\n    const [loading, Loading] = useState(false);\n\n    const categoriesOpts = categories.map(cat => ({ key: cat._id, value: cat._id, text: cat.name }));\n\n    const UpdateContact = async () => {\n        Loading(true);\n\n        const settings = {\n            firstName: first,\n            lastName: last,\n            mainTelephone: {\n                code: mainTelCode,\n                value: mainTelVal\n            },\n            mainEmail,\n            category: category,\n            emails,\n            telephones: tels,\n            ...(birthDate ? { \n                birthDate: new Date(\n                    (new Date(birthDate)).getFullYear(),\n                    (new Date(birthDate)).getMonth(),\n                    (new Date(birthDate)).getDate()\n                )\n            } : {}),\n            who,\n            about,\n            messangers: {\n                telegram,\n                viber,\n                whatsapp,\n                instagram,\n                twitter,\n                facebook\n            },\n            favorite\n        };\n\n        settings.photo = photo || \"\";\n\n        await updateContact(id, settings);\n\n        Loading(false);\n        window.location.reload();\n    };\n\n    let birthDateForDelault;\n\n    if (defs.birthDate) {\n        birthDateForDelault = new Date(defs.birthDate.getFullYear(), defs.birthDate.getMonth() + 1, defs.birthDate.getDate());\n    }\n\n    return (\n        <Form onSubmit={UpdateContact}>\n            <Form.Group>\n                <Form.Input\n                    width={7}\n                    fluid\n                    icon=\"users\"\n                    iconPosition=\"left\"\n                    onChange={e => First(e.target.value)}\n                    placeholder=\"First name\"\n                    defaultValue={first}\n                />\n                <Form.Input\n                    width={7}\n                    fluid\n                    icon=\"users\"\n                    iconPosition=\"left\"\n                    onChange={e => Last(e.target.value)}\n                    placeholder=\"Last name\"\n                    defaultValue={last}\n                />\n            </Form.Group>\n            <TelField\n                onChangeCode={e => MainTelCode(e.target.value)}\n                codePlaceholder=\"Main telephone code\"\n                onChangeVal={e => MainTelVal(e.target.value)}\n                valPlaceholder=\"Main telephone value\"\n                valDef={mainTelVal}\n                codeDef={mainTelCode}\n            />\n            {tels.map((tel, i) => (\n                <TelField\n                    key={i}\n                    onChangeCode={e => tels[i].code = e.target.value}\n                    onChangeVal={e => tels[i].value = e.target.value}\n                    codePlaceholder={\"Tel #\" + (i + 2) + \" code\"}\n                    valPlaceholder={\"Tel #\" + (i + 2) + \" value\"}\n                    valDef={tel.value}\n                    codeDef={tel.code}\n                />\n            ))}\n            <Button\n                fluid\n                positive\n                disabled={tels.length > 9}\n                onClick={() => tels.length <= 10 ? Tels([...tels, { code: \"\", value: \"\" }]) : null}\n                style={{ marginBottom: 10 }}\n                type=\"button\"\n            >\n                + Add telephone\n            </Button>\n            <EmailField\n                onChange={e => MainEmail(e.target.value)}\n                placeholder=\"Main email\"\n                defaultValue={mainEmail}\n            />\n            {emails.map((email, i) => (\n                <EmailField\n                    key={i}\n                    onChange={e => emails[i] = e.target.value}\n                    placeholder={\"Email #\" + (i + 2)}\n                    defaultValue={email}\n                />\n            ))}\n            <Button\n                fluid\n                positive\n                disabled={emails.length > 9}\n                onClick={() => emails.length <= 10 ? Emails([...emails, \"\"]) : null}\n                style={{ marginBottom: 10 }}\n                type=\"button\"\n            >\n                + Add email\n            </Button>\n            <Form.Select options={categoriesOpts} onChange={(e, data) => Category(data.value)} defaultValue={category} />\n            <Form.Input\n                fluid\n                onChange={e => Who(e.target.value)}\n                placeholder=\"Who\"\n                defaultValue={who}\n            />\n            <Form.TextArea\n                onChange={e => About(e.target.value)}\n                placeholder=\"About\"\n                defaultValue={about}\n            />\n            <Form.Group style={{ width: \"100%\" }}>\n                <Form.Input\n                    width={5}\n                    fluid\n                    placeholder=\"Telegram\"\n                    onChange={e => Telegram(e.target.value)}\n                    defaultValue={telegram}\n                />\n                <Form.Input\n                    width={5}\n                    fluid\n                    placeholder=\"Viber\"\n                    onChange={e => Viber(e.target.value)}\n                    defaultValue={viber}\n                />\n                <Form.Input\n                    width={5}\n                    fluid\n                    placeholder=\"Whatsapp\"\n                    onChange={e => Whatsapp(e.target.value)}\n                    defaultValue={whatsapp}\n                />\n            </Form.Group>\n            <Form.Group>\n                <Form.Input\n                    width={5}\n                    fluid\n                    placeholder=\"Facebook\"\n                    onChange={e => Facebook(e.target.value)}\n                    defaultValue={facebook}\n                />\n                <Form.Input\n                    width={5}\n                    fluid\n                    placeholder=\"Twitter\"\n                    onChange={e => Twitter(e.target.value)}\n                    defaultValue={twitter}\n                />\n                <Form.Input\n                    width={5}\n                    fluid\n                    placeholder=\"Instagram\"\n                    onChange={e => Instagram(e.target.value)}\n                    defaultValue={instagram}\n                />\n            </Form.Group>\n            <Form.Input\n                fluid\n                type=\"date\"\n                label=\"Birth date\"\n                labelPosition=\"left\"\n                placeholder=\"Birth date\"\n                onChange={(e, data) => BirthDate(data.value)}\n                defaultValue={defs.birthDate ? (\n                    __fmt_Y__(birthDateForDelault.getFullYear()) + \"-\" +\n                    __fmt__(birthDateForDelault.getMonth()) + \"-\" +\n                    __fmt__(birthDateForDelault.getDate())\n                ) : \"\"}\n            />\n            <Form.Checkbox \n                label=\"Favorite\"\n                onChange={(e, data) => Favorite(data.checked)}\n                checked={favorite}\n                toggle\n            />\n            <FileInput\n                buttonText=\"Choose new contact photo\"\n                onChange={val => Photo(val)}\n                setLoading={Loading}\n                startUploaded\n            />\n            <Button\n                fluid\n                primary\n                type=\"submit\"\n                size=\"large\"\n                loading={loading}\n                disabled={!(mainTelCode && mainTelVal)}\n            >\n                Update contact\n            </Button>\n        </Form>\n    );\n};\n\nexport default UpdateContactForm;\n","import React from \"react\";\nimport Logo from \"../../components/Logo\";\nimport { Header, Grid, Segment } from \"semantic-ui-react\";\nimport UpdateContactForm from \"../../components/UpdateContactForm\";\n\nconst UpdateContactPage = ({ categories, id, defs }) => {\n    return (\n        <Grid textAlign=\"center\" verticalAlign=\"middle\">\n            <Grid.Column style={{ maxWidth: 500 }}>\n                <Logo noImage />\n                <Header color=\"olive\" size=\"large\">Update contact in your book</Header>\n                <Segment>\n                    <UpdateContactForm categories={categories} id={id} defs={defs} />\n                </Segment>\n            </Grid.Column>\n        </Grid>\n    );\n};\n\nexport default UpdateContactPage;\n","import React, { useState } from \"react\";\nimport { Modal, Button, Form, Icon } from \"semantic-ui-react\";\nimport validator from \"validator\";\nimport { share } from \"../../services/contact\";\n\nconst ShareContact = ({ id }) => {\n    const [email, Email] = useState(\"\");\n    const [valid, Valid] = useState(true);\n    const [loading, Loading] = useState(false);\n\n    const setEmail = val => {\n        Email(val);\n        Valid(true);\n    };\n\n    const Share = async () => {\n        if (!email || !valid) return;\n        Loading(true);\n        await share(id, email);\n        Loading(false);\n        window.location.reload();\n    };\n\n    return (\n        <Modal closeIcon openOnTriggerClick trigger={<Button positive><Icon name=\"share alternate\" />Share</Button>}>\n            <Modal.Header>\n                Share a contact with person\n            </Modal.Header>\n            <Modal.Content>\n                <Form onSubmit={Share}>\n                    <Form.Input\n                        icon=\"at\"\n                        fluid\n                        iconPosition=\"left\"\n                        placeholder=\"Email, on which you would like to send a message about sharing\"\n                        onChange={e => setEmail(e.target.value)}\n                        onBlur={() => Valid(validator.isEmail(email))}\n                        error={!valid}\n                    />\n                    <Button type=\"submit\" positive disabled={!email} loading={loading}>Share!</Button>\n                </Form>\n            </Modal.Content>\n        </Modal>\n    );\n};\n\nexport default ShareContact;\n","import React, { useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setExpandedContact } from \"../../redux/actions\";\nimport { Modal, Grid, Label, Button, Image } from \"semantic-ui-react\";\nimport { get as getCategories } from \"../../services/category\";\nimport UpdateContactPage from \"../UpdateContactPage\";\nimport { deleteContact, addContact } from \"../../services/contact\";\nimport ShareContact from \"../../components/ShareContact\";\nimport stripEmpty from \"../../stripEmpty.util\";\n\nconst ExpandedContact = ({ contact, Close, isNew }) => {\n    const categories = useRef();\n    const requested = useRef();\n\n    useEffect(() => {\n        (async () => {\n            if (!requested.current) {\n                categories.current = await getCategories();\n                requested.current = true;\n            }\n        })();\n    });\n\n    if (!contact) return \"\";\n\n    return (\n        <Modal onClose={Close} dimmer=\"blurring\" centered={false} open closeIcon>\n            <Modal.Header>\n                {(contact.firstName || \"\") + \" \" + (contact.lastName || \"\") + ((contact.who && (\" - \" + contact.who)) || \"\")}\n            </Modal.Header>\n            <Modal.Content>\n                <Grid columns=\"4\">\n                    <Grid.Column>\n                        {contact.mainEmail ? (\n                            <p>\n                                Email:\n                                <a href={\"mailto:\" + contact.mainEmail}>{\" \" + contact.mainEmail}</a>\n                            </p>\n                        ) : \"\"}\n                        \n                        {contact.mainTelephone ? (\n                            <p>\n                                Telephone:\n                                <a href={\"tel:\" + contact.mainTelephone.code + contact.mainTelephone.value}>\n                                    {\" \" + contact.mainTelephone.code + contact.mainTelephone.value}\n                                </a>\n                            </p>\n                        ) : \"\"}\n\n                        {contact.favorite ? <Label color=\"yellow\">Favorite</Label> : \"\"}\n                        <Label color=\"green\">{contact.category.name}</Label>\n                    </Grid.Column>\n                    <Grid.Column>\n                        {contact.telephones && contact.telephones.map((telephone, i) => \n                            <p key={i}>\n                                <a href={\"tel:\" + telephone.code + telephone.value}>\n                                    {telephone.code + telephone.value}\n                                </a>\n                            </p>)}\n                    </Grid.Column>\n                    <Grid.Column>\n                        {contact.emails && contact.emails.map((email, i) => \n                            <p key={i}>\n                                <a href={\"mailto:\" + email}>\n                                    {email}\n                                </a>\n                            </p>)}\n                    </Grid.Column>\n                    <Grid.Column>\n                        {contact.messangers ? (\n                            <>\n                                {contact.messangers.telegram ? <div>Telegram: {contact.messangers.telegram}</div> : \"\"}\n                                {contact.messangers.viber ? <div>Viber: {contact.messangers.viber}</div> : \"\"}\n                                {contact.messangers.whatsapp ? <div>Whatsapp: {contact.messangers.whatsapp}</div> : \"\"}\n                                {contact.messangers.facebook ? <div>Facebook: {contact.messangers.facebook}</div> : \"\"}\n                                {contact.messangers.instagram ? <div>Instagram: {contact.messangers.instagram}</div> : \"\"}\n                                {contact.messangers.twitter ? <div>Twitter: {contact.messangers.twitter}</div> : \"\"}\n                            </>\n                        ) : \"\"}\n                    </Grid.Column>\n                </Grid>\n                <div style={{ whiteSpace: \"pre-wrap\", margin: 10 }}>{contact.about}</div>\n                <Image circular centered size=\"small\" src={contact.photo.url} alt=\"Photo\" />\n            </Modal.Content>\n            <Modal.Actions>\n                {!isNew ? (\n                    <Button.Group>\n                        <Button positive compact onClick={Close}>Close</Button>\n                        {requested.current ? (\n                            <Modal openOnTriggerClick closeIcon trigger={<Button color=\"yellow\" compact>Update</Button>}>\n                                <Modal.Header>Update contact</Modal.Header>\n                                <Modal.Content>\n                                    <UpdateContactPage id={contact._id} categories={categories.current} defs={contact} />\n                                </Modal.Content>\n                            </Modal>\n                        ) : \"\"}\n                        <Modal openOnTriggerClick closeIcon trigger={<Button negative icon=\"trash\" compact />}>\n                            <Modal.Header>Are you sure?</Modal.Header>\n                            <Modal.Content>\n                                Are you sure want to delete this contact?\n                            </Modal.Content>\n                            <Modal.Actions>\n                                <Button negative onClick={async () => {\n                                    await deleteContact(contact._id);\n                                    window.location.reload();\n                                }}>\n                                    Yes\n                                </Button>\n                            </Modal.Actions>\n                        </Modal>\n                        <ShareContact id={contact._id} />\n                    </Button.Group>\n                ) : (\n                    <Button.Group>\n                        <Button\n                            positive\n                            onClick={async () => {\n                                await addContact(stripEmpty({\n                                    firstName: contact.firstName,\n                                    lastName: contact.lastName,\n                                    mainTelephone: contact.mainTelephone,\n                                    mainEmail: contact.mainEmail,\n                                    category: contact.category._id,\n                                    emails: contact.emails,\n                                    telephones: contact.telephones ? contact.telephones.map(tel => ({ code: tel.code, value: tel.value })) : null,\n                                    who: contact.who,\n                                    about: contact.about,\n                                    messangers: contact.messangers,\n                                    favorite: contact.favorite,\n                                    birthDate: contact.birthDate,\n                                    photo: contact.photo ? contact.photo._id : null\n                                })[1]);\n\n                                window.location.href = \"/\";\n                            }}\n                        >\n                            Accept\n                        </Button>\n                        <Button.Or />\n                        <Button\n                            negative\n                            onClick={async () => {\n                                window.location.href = \"/\";\n                            }}\n                        >\n                            Exit\n                        </Button>\n                    </Button.Group>\n                )}\n            </Modal.Actions>\n        </Modal>\n    );\n};\n\nconst mapStateToProps = state => ({\n    contact: state.contacts.expanded\n});\n\nconst mapDispatchToProps = dispatch => ({\n    Close: () => dispatch(setExpandedContact(null))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpandedContact);\n","import React from \"react\";\nimport SiteHeader from \"../SiteHeader\";\nimport { getContacts } from \"../../services/contact\";\nimport Contacts from \"../Contacts\";\nimport ExpandedContact from \"../ExpandedContact\";\nimport querystring from \"querystring\";\n\nclass MainPage extends React.Component {\n    constructor({ newExpanded = false, query = undefined }) {\n        super();\n        this.query = query;\n        this.newExpanded = newExpanded;\n        this.state = { requested: false, contacts: [] };\n    }\n\n    componentDidMount() {\n        if (!this.state.requested) {\n            getContacts()\n                .then(contacts => this.setState({ requested: true, contacts }));\n        }\n    }\n\n    render() {\n        document.title = \"Contact Book\";\n        let contacts;\n        const query = this.query !== undefined ? this.query : this.props.location.search;\n        const filter = querystring.parse(query.slice(1, query.length));\n\n        if (filter) {\n            const {\n                firstName: first = \"\",\n                lastName: last = \"\",\n                mainEmail: email = \"\",\n                category: cat = \"\"\n            } = filter;\n\n            contacts = this.state.contacts\n                .filter(c => first ? c.firstName.toLowerCase().includes(first.toLowerCase()) : true)\n                .filter(c => last ? c.lastName.toLowerCase().includes(last.toLowerCase()) : true)\n                .filter(c => email ? c.mainEmail.toLowerCase().includes(email.toLowerCase()) : true)\n                .filter(c => cat ? c.category.name.toLowerCase().includes(cat.toLowerCase()) : true);\n        } else {\n            contacts = this.state.contacts;\n        }\n\n        return (\n            <>\n                <SiteHeader />\n                <Contacts contacts={contacts} filterDefs={filter} />\n                <ExpandedContact isNew={this.newExpanded} />\n            </>\n        );\n    }\n}\n\nexport default MainPage;\n","import React from \"react\";\nimport { Route } from \"react-router\";\n\nconst PrivateRoute = ({ authorized, component: Component, ...rest }) => {\n    const Redirect = () => {\n        return (\n            <>\n                {window.location.href = \"/login\"}\n            </>\n        );\n    }\n\n    if (authorized) {\n        return <Route component={Component} {...rest} />\n    } else {\n        return <Route component={Redirect} />\n    }\n};\n\nexport default PrivateRoute;\n","import React, { useState } from \"react\";\nimport { Form, Button, Label } from \"semantic-ui-react\";\nimport validator from \"validator\";\nimport FileInput from \"../FileInput\";\n\nconst RegisterForm = ({ register, set }) => {\n    const [firstName, FirstName] = useState(\"\");\n    const [lastName, LastName] = useState(\"\");\n    const [email, Email] = useState(\"\");\n    const [password, Password] = useState(\"\");\n    const [image, Image] = useState(null);\n    const [emailValid, EmailValid] = useState(true);\n    const [passwordValid, PasswordValid] = useState(true);\n    const [loading, Loading] = useState(false);\n\n    const Register = async () => {\n        const valid = emailValid && passwordValid;\n        const fields = email && password;\n        if (!valid || !fields || loading) return;\n        Loading(true);\n        const firstNameO = firstName ? { firstName } : {};\n        const lastNameO = lastName ? { lastName } : {};\n        const imageO = image ? { photo: image } : {};\n        const result = await register({ email, password, ...lastNameO, ...firstNameO, ...imageO });\n        Loading(false);\n\n        if (result.message) {\n            alert(result.message);\n        } else if (result.user) {\n            localStorage.setItem(\"user\", JSON.stringify(result.user));\n            localStorage.setItem(\"token\", JSON.stringify(result.token));\n            set(result.user);\n            window.location.href = \"/\";\n        }\n    };\n\n    const setEmail = val => {\n        Email(val);\n        EmailValid(true);\n    };\n\n    const setPassword = val => {\n        Password(val);\n        PasswordValid(true);\n    }\n\n    document.title = \"Contact Book | Sign up\";\n\n    return (\n        <Form onSubmit={Register}>\n            <Form.Input\n                type=\"text\"\n                fluid\n                iconPosition=\"left\"\n                icon=\"users\"\n                placeholder=\"First name\"\n                onChange={e => FirstName(e.target.value)}\n            />\n            <Form.Input\n                type=\"text\"\n                fluid\n                iconPosition=\"left\"\n                icon=\"users\"\n                placeholder=\"Last name\"\n                onChange={e => LastName(e.target.value)}\n            />\n            <Form.Input\n                icon=\"at\"\n                type=\"email\"\n                iconPosition=\"left\"\n                placeholder=\"Email\"\n                error={!emailValid}\n                fluid\n                onChange={e => setEmail(e.target.value)}\n                onBlur={() => EmailValid(validator.isEmail(email))}\n            />\n            <Label style={{ marginBottom: 10 }} color={password.length >= 6 ? \"green\" : \"grey\"}>\n                Password must be at least 6 characters long\n            </Label>\n            <Form.Input\n                icon=\"lock\"\n                type=\"password\"\n                iconPosition=\"left\"\n                placeholder=\"Password\"\n                error={!passwordValid}\n                fluid\n                onChange={e => setPassword(e.target.value)}\n                onBlur={() => PasswordValid(Boolean(password && password.length >= 6))}\n            />\n            <FileInput buttonText=\"Choose profile photo\" onChange={id => Image(id)} setLoading={Loading} />\n            <div style={{ marginBottom: 10 }}>Don't worry, if your image does not load. Just wait for a several minutes</div>\n            <Button\n                color=\"teal\"\n                size=\"large\"\n                fluid\n                primary\n                type=\"submit\"\n                loading={loading}\n                disabled={!Boolean(password && email && emailValid) || !(password.length >= 6)}\n            >\n                Sign up\n            </Button>\n        </Form>\n    );\n};\n\nexport default RegisterForm;\n","import React from \"react\";\nimport { Grid, Segment, Header, Message, Button } from \"semantic-ui-react\";\nimport { register } from \"../../services/user\";\nimport RegisterForm from \"../../components/RegisterForm\";\nimport { connect } from \"react-redux\";\nimport { setProfile } from \"../../redux/actions\";\nimport Logo from \"../../components/Logo\";\n\nconst RegisterPage = ({ setProfile }) => {\n    return (\n        <Grid textAlign=\"center\" verticalAlign=\"middle\" className=\"fill\">\n            <Grid.Column style={{ maxWidth: 450 }}>\n                <Logo />\n                <Header as=\"h2\" color=\"olive\">Sign up to Contact Book</Header>\n                <Segment>\n                    <RegisterForm register={register} set={setProfile} />\n                </Segment>\n                <Message>\n                    <Message.Header>Already with us?</Message.Header>\n                    <Message.Content>\n                        <Button\n                            onClick={() => window.location.href = \"/login\"}\n                            compact\n                            size=\"small\"\n                            color=\"teal\"\n                            style={{ marginTop: 10 }}\n                        >\n                            Log in\n                        </Button>\n                    </Message.Content>\n                </Message>\n            </Grid.Column>\n        </Grid>\n    );\n};\n\nconst mapStateToProps = () => ({});\n\nconst mapDispatchToProps = dispatch => ({\n    setProfile: user => dispatch(setProfile(user))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterPage);\n","import React, { useState } from \"react\";\nimport { Form, Button, Message } from \"semantic-ui-react\";\nimport validator from \"validator\";\nimport FileInput from \"../FileInput\";\n\nconst UpdateProfileForm = ({ update, set, defs }) => {\n    const [firstName, FirstName] = useState(defs.firstName || \"\");\n    const [lastName, LastName] = useState(defs.lastName || \"\");\n    const [email, Email] = useState(defs.email || \"\");\n    const [password, Password] = useState(null);\n    const [image, Image] = useState(defs.photo ? (defs.photo._id || \"\") : \"\");\n    const [emailValid, EmailValid] = useState(true);\n    const [passwordValid, PasswordValid] = useState(false);\n    const [loading, Loading] = useState(false);\n    const [errorMessage, ErrorMessage] = useState(\"\");\n\n    const Update = async () => {\n        const valid = emailValid && passwordValid;\n        if (!valid || !email || !password || loading) return;\n        Loading(true);\n        const result = await update({ email, password, lastName, firstName, photo: image || \"\" });\n        Loading(false);\n\n        if (result.message) {\n            ErrorMessage(result.message);\n        } else if (result.user) {\n            localStorage.setItem(\"user\", JSON.stringify(result.user));\n            localStorage.setItem(\"token\", JSON.stringify(result.token));\n            set(result.user);\n            window.location.href = \"/\";\n        }\n    };\n\n    const setEmail = val => {\n        Email(val);\n        EmailValid(true);\n    };\n\n    const setPassword = val => {\n        Password(val);\n        PasswordValid(true);\n    }\n\n    document.title = \"Contact Book | Update profile\";\n\n    return (\n        <Form onSubmit={Update}>\n            <Form.Input\n                type=\"text\"\n                fluid\n                iconPosition=\"left\"\n                icon=\"users\"\n                placeholder=\"First name\"\n                onChange={e => FirstName(e.target.value)}\n                defaultValue={firstName}\n            />\n            <Form.Input\n                type=\"text\"\n                fluid\n                iconPosition=\"left\"\n                icon=\"users\"\n                placeholder=\"Last name\"\n                onChange={e => LastName(e.target.value)}\n                defaultValue={lastName}\n            />\n            <Form.Input\n                icon=\"at\"\n                type=\"email\"\n                iconPosition=\"left\"\n                placeholder=\"Email\"\n                error={!emailValid}\n                fluid\n                onChange={e => setEmail(e.target.value)}\n                onBlur={() => EmailValid(validator.isEmail(email))}\n                defaultValue={email}\n            />\n            <Form.Input\n                icon=\"lock\"\n                type=\"password\"\n                iconPosition=\"left\"\n                placeholder=\"Password\"\n                error={!passwordValid}\n                fluid\n                onChange={e => setPassword(e.target.value)}\n                onBlur={() => PasswordValid(Boolean(password && password.length >= 6))}\n                defaultValue={password}\n            />\n            <FileInput buttonText=\"Choose profile photo\" onChange={id => Image(id)} setLoading={Loading} startUploaded />\n            <Button.Group fluid>\n                <Button\n                    color=\"teal\"\n                    size=\"large\"\n                    primary\n                    type=\"submit\"\n                    loading={loading}\n                    disabled={!Boolean(email && password && emailValid) || !(password ? password.length >= 6 : true)}\n                >\n                    Update my profile\n                </Button>\n                <Button\n                    color=\"teal\"\n                    size=\"large\"\n                    secondary\n                    type=\"button\"\n                    onClick={() => window.location.href = \"/\"}\n                >\n                    Cancel\n                </Button>\n            </Button.Group>\n            {errorMessage ? (\n                <Message negative style={{ display: \"block\" }}>\n                    <Message.Header>Error!</Message.Header>\n                    <Message.Content>\n                        {errorMessage}\n                    </Message.Content>\n                </Message>\n            ) : \"\"}\n        </Form>\n    );\n};\n\nexport default UpdateProfileForm;\n","import React from \"react\";\nimport { Grid, Segment, Header } from \"semantic-ui-react\";\nimport { update } from \"../../services/user\";\nimport UpdateProfileForm from \"../../components/UpdateProfileForm\";\nimport { connect } from \"react-redux\";\nimport { setProfile } from \"../../redux/actions\";\nimport Logo from \"../../components/Logo\";\n\nconst UpdateProfilePage = ({ setProfile, defs }) => {\n    return (\n        <Grid textAlign=\"center\" verticalAlign=\"middle\" className=\"fill\">\n            <Grid.Column style={{ maxWidth: 450 }}>\n                <Logo />\n                <Header as=\"h2\" color=\"olive\">Update your Contact Book profile</Header>\n                <Segment>\n                    <UpdateProfileForm update={update} set={setProfile} defs={defs} />\n                </Segment>\n            </Grid.Column>\n        </Grid>\n    );\n};\n\nconst mapStateToProps = state => ({\n    defs: state.profile.profile\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setProfile: user => dispatch(setProfile(user))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateProfilePage);\n","import React from \"react\";\nimport { Grid, Header, Button } from \"semantic-ui-react\";\n\nconst NotFound = () => {\n    document.body.style.backgroundColor = \"black\";\n\n    return (\n        <Grid centered columns=\"1\" textAlign=\"center\" verticalAlign=\"middle\" className=\"fill\">\n            <Grid.Column style={{ maxWidth: 450 }}>\n                <Header color=\"red\" size=\"huge\" textAlign=\"center\" inverted>404 Page not found</Header>\n                <Button\n                    positive\n                    compact\n                    size=\"massive\"\n                    fluid\n                    onClick={() => window.location.href = \"/\"}\n                >\n                    Back, to home\n                </Button>\n            </Grid.Column>\n        </Grid>\n    );\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport MainPage from \"../MainPage\";\nimport { getContactById } from \"../../services/contact\";\nimport Spinner from \"../../components/Spinner\";\nimport { setExpandedContact } from \"../../redux/actions\";\nimport { connect } from \"react-redux\";\n\nclass SharedContactPage extends React.Component {\n    constructor({ setContact }) {\n        super();\n        this.setContact = setContact;\n\n        this.state = {\n            requested: false\n        };\n    }\n\n    componentDidMount() {\n        if (!this.state.requested) {\n            const { id } = this.props.match.params;\n\n            getContactById(id).then(contact => {\n                this.setContact(contact);\n                this.setState({ requested: true });\n            });\n        }\n    }\n\n    render() {\n        if (!this.state.requested) {\n            return <Spinner />\n        } else {\n            return <MainPage newExpanded={true} query={this.props.location.search} />;\n        }\n    }\n}\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = dispatch => ({\n    setContact: contact => dispatch(setExpandedContact(contact))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SharedContactPage);\n","export const PROXY = process.env.REACT_APP_API_URI;\n","import { PROXY } from \"../../config\";\n\nexport default () => window.location.href = PROXY;\n","import React from \"react\";\nimport { Router, Route, Switch } from \"react-router\";\nimport { createBrowserHistory } from \"history\";\nimport LoginPage from \"../LoginPage\";\nimport MainPage from \"../MainPage\";\nimport PrivateRoute from \"../PrivateRoute\";\nimport { exists } from \"../../services/user\";\nimport Spinner from \"../../components/Spinner\";\nimport { connect } from \"react-redux\";\nimport RegisterPage from \"../RegisterPage\";\nimport UpdateProfilePage from \"../UpdateProfilePage\";\nimport NotFound from \"../../scenes/NotFound\";\nimport SharedContactPage from \"../SharedContactPage\";\nimport RedirectToApi from \"../../components/RedirectToApi\";\n\nclass Routing extends React.Component {\n    constructor({ user }) {\n        super();\n        this.history = createBrowserHistory();\n        this.user = user;\n\n        this.state = {\n            requested: false,\n            exists: false\n        }\n    }\n\n    componentDidMount() {\n        const userString = localStorage.getItem(\"user\");\n\n        if (userString && this.user.profile) {\n            if (!this.state.requested) {\n                const email = JSON.parse(userString).email;\n                exists(email).then(userExists => this.setState({ requested: true, exists: userExists.exists }));\n            }\n        } else {\n            this.setState({ requested: true, exists: false });\n        }\n    }\n\n    render() {\n        if (!this.state.requested) {\n            return <Spinner />\n        } else {\n            return (\n                <Router history={this.history}>\n                    <Switch>\n                        <Route exact component={LoginPage} path=\"/login\" />\n                        <Route exaxt component={RegisterPage} path=\"/register\" />\n                        <Route exact component={RedirectToApi} path=\"/api\" />\n                        <PrivateRoute exact authorized={this.state.exists || false} component={MainPage} path=\"/\" />\n                        <PrivateRoute exact authorized={this.state.exists || false} component={UpdateProfilePage} path=\"/update\" />\n                        <PrivateRoute authorized={this.state.exists || false} component={SharedContactPage} path=\"/shared/:id\" />\n                        <Route path=\"*\" exact component={NotFound} />\n                    </Switch>\n                </Router>\n            );\n        }\n    }\n}\n\nconst mapStateToProps = state => ({\n    user: state.profile\n});\n\nexport default connect(mapStateToProps)(Routing);\n","import { createStore, combineReducers } from \"redux\";\nimport { profile, contacts } from \"./reducers\";\n\nconst reducer = combineReducers({ profile, contacts });\nconst user = localStorage.getItem(\"user\");\n\nconst store = createStore(\n    reducer,\n    {\n        contacts: {\n            expanded: null\n        },\n        profile: {\n            profile: user ? JSON.parse(user) : undefined\n        }\n    }\n);\n\nexport default store;\n","import { SET_PROFILE, SET_EXP_CONTACT } from \"./types\";\n\nexport const profile = (state = {}, action) => {\n    switch (action.type) {\n        case SET_PROFILE:\n            return {\n                ...state,\n                profile: action.profile\n            };\n        default:\n            return state;\n    }\n};\n\nexport const contacts = (state = {}, action) => {\n    switch (action.type) {\n        case SET_EXP_CONTACT:\n            return {\n                ...state,\n                expanded: action.contact\n            };\n        default:\n            return state;\n    }\n};\n","import React from \"react\";\nimport Routing from \"../../containers/Routing\";\nimport { Provider } from \"react-redux\";\nimport store from \"../../redux/store\";\n\nclass Home extends React.Component {\n    render() {\n        return (\n            <Provider store={store}>\n                <Routing />\n            </Provider>\n        );\n    }\n}\n\nexport default Home;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Home from './scenes/Home';\nimport 'semantic-ui-css/semantic.min.css';\nimport \"./styles/common.scss\";\nimport { PROXY } from \"./config\";\n\nconst prevFetch = window.fetch;\n\nwindow.fetch = async (url, opts) => {\n    let token = localStorage.getItem(\"token\");\n    token = ((token && token.startsWith(\"\\\"\")) ? token.slice(1, -1) : token)\n\n    opts.headers = opts.headers\n        ? { ...opts.headers, \"Authorization\": \"Bearer \" + token }\n        : { \"Authorization\": \"Bearer \" + token };\n\n    return await prevFetch(PROXY + url, opts);\n};\n\nReactDOM.render(\n    <Home />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}